
package actividad06.graphics;

import actividad06.pideDatos.Pregunta;
import actividad06.vehiculos.Camion;
import actividad06.vehiculos.Camion.Structure;
import actividad06.vehiculos.Carga;
import actividad06.vehiculos.Coche;
import actividad06.vehiculos.Coche.Gama;
import actividad06.vehiculos.Vehiculo;
import actividad06.vehiculos.VehiculoVerifications;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author sergionicolaslopezgarcia
 */
public class CreateVehicule extends javax.swing.JInternalFrame {
    /**
     * Creates new form CreateCar
     */
    public CreateVehicule(JLabel[] spots) {
        initComponents();
        this.spots = spots;
        setBrandComboBox();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        numDays = new javax.swing.JTextField();
        seatsCheckButton = new javax.swing.JButton();
        daysCheckButton = new javax.swing.JButton();
        gamaComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        vehiculeTypeBox = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        weightCheckButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        structureComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        numSeats = new javax.swing.JTextField();
        createVehiculeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        plate = new javax.swing.JTextField();
        plateCheckButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        maxWeight = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        modelComboBox = new javax.swing.JComboBox<>();
        brandsComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBackground(new java.awt.Color(17, 54, 74));

        numDays.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numDays.setEnabled(false);

        seatsCheckButton.setText("Check");
        seatsCheckButton.setEnabled(false);
        seatsCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatsCheckButtonActionPerformed(evt);
            }
        });

        daysCheckButton.setText("Check");
        daysCheckButton.setEnabled(false);
        daysCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daysCheckButtonActionPerformed(evt);
            }
        });

        gamaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gama A", "Gama B", "Gama C", "Gama D" }));
        gamaComboBox.setEnabled(false);
        gamaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gamaComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(199, 209, 214));
        jLabel7.setText("Qué tipo de Vehiculo te gustaria introducir?");

        vehiculeTypeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Coche", "Carga", "Camión" }));
        vehiculeTypeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehiculeTypeBoxActionPerformed(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(199, 209, 214));
        jLabel15.setText("Selecciona la estructura del camión");

        jLabel13.setForeground(new java.awt.Color(199, 209, 214));
        jLabel13.setText("Introduce el número de días del alquiler");

        weightCheckButton.setText("Check");
        weightCheckButton.setEnabled(false);
        weightCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightCheckButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(199, 209, 214));
        jLabel10.setText("Estructura:");

        structureComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Remolque", "Semirremolque", "Rígido" }));
        structureComboBox.setEnabled(false);
        structureComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                structureComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(199, 209, 214));
        jLabel6.setText("Fomato: 1234BCD (4 números y 3 Consonantes)");

        jLabel11.setForeground(new java.awt.Color(199, 209, 214));
        jLabel11.setText("Introduce un número entre 2 - 7");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(199, 209, 214));
        jLabel5.setText("Dias alquiler:");

        numSeats.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numSeats.setEnabled(false);

        createVehiculeButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        createVehiculeButton.setText("Crear");
        createVehiculeButton.setEnabled(false);
        createVehiculeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createVehiculeButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(199, 209, 214));
        jLabel1.setText("Crear un nuevo Vehiculo");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(199, 209, 214));
        jLabel2.setText("Matricula:");

        plate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        plate.setEnabled(false);
        plate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plateActionPerformed(evt);
            }
        });

        plateCheckButton.setText("Check");
        plateCheckButton.setEnabled(false);
        plateCheckButton.setMaximumSize(new java.awt.Dimension(91, 29));
        plateCheckButton.setMinimumSize(new java.awt.Dimension(91, 29));
        plateCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plateCheckButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(199, 209, 214));
        jLabel3.setText("Modelo:");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(199, 209, 214));
        jLabel4.setText("Asientos:");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(199, 209, 214));
        jLabel8.setText("Gama:");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(199, 209, 214));
        jLabel9.setText("Peso Max (Tn):");

        maxWeight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        maxWeight.setEnabled(false);

        jLabel16.setForeground(new java.awt.Color(199, 209, 214));
        jLabel16.setText("Introduce número entre 0 - 30");

        jLabel17.setForeground(new java.awt.Color(199, 209, 214));
        jLabel17.setText("Selecciona la gama del coche");

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(199, 209, 214));
        jLabel14.setText("Marca:");

        modelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ""}));
        modelComboBox.setEnabled(false);
        modelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelComboBoxActionPerformed(evt);
            }
        });

        brandsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        brandsComboBox.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(vehiculeTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel14))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(numSeats)
                        .addComponent(modelComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(numDays)
                        .addComponent(gamaComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(brandsComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(structureComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(plate, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(plateCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(seatsCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(daysCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(weightCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createVehiculeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(20, 20, 20)
                .addComponent(vehiculeTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(plate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plateCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brandsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatsCheckButton)
                    .addComponent(jLabel11)
                    .addComponent(jLabel4))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(daysCheckButton)
                    .addComponent(jLabel13)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gamaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightCheckButton)
                    .addComponent(jLabel16)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(structureComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel10))
                .addGap(48, 48, 48)
                .addComponent(createVehiculeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void plateCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plateCheckButtonActionPerformed
        if(plateCheckButton.getText().equals("Check")) {
                if(!VehiculoVerifications.validPlateAsk(plate.getText())) {
                    plate.setText("");
                    plate.requestFocus();
                } else {
                    plate.setEditable(false);
                    plateCheckButton.setText("Modify");
                    brandsComboBox.setEnabled(true);
                    brandsComboBox.requestFocus();
                }
        } else {
            plateCheckButton.setText("Check");
            plate.setEditable(true);
            plate.setText("");
            plate.requestFocus();
        }
    }//GEN-LAST:event_plateCheckButtonActionPerformed

    private void plateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plateActionPerformed
    }//GEN-LAST:event_plateActionPerformed
//GEN-FIRST:event_createVehiculeButtonActionPerformed
//GEN-LAST:event_createVehiculeButtonActionPerformed

    private void structureComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_structureComboBoxActionPerformed
        createVehiculeButton.setEnabled(true);
        createVehiculeButton.requestFocus();
    }//GEN-LAST:event_structureComboBoxActionPerformed
/*
    private void weightCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightCheckButtonActionPerformed
    }//GEN-LAST:event_weightCheckButtonActionPerformed
*/
    private void vehiculeTypeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehiculeTypeBoxActionPerformed
        plate.setEnabled(true);
        plate.requestFocus();
        plateCheckButton.setEnabled(true);
    }//GEN-LAST:event_vehiculeTypeBoxActionPerformed

    private void gamaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gamaComboBoxActionPerformed
        createVehiculeButton.setEnabled(true);
        createVehiculeButton.requestFocus();
    }//GEN-LAST:event_gamaComboBoxActionPerformed

/*
    private void daysCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daysCheckButtonActionPerformed
    }//GEN-LAST:event_daysCheckButtonActionPerformed
    private void seatsCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatsCheckButtonActionPerformed
    }//GEN-LAST:event_seatsCheckButtonActionPerformed
*/
    private void modelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelComboBoxActionPerformed
        numSeats.setEnabled(true);
        numSeats.requestFocus();
        seatsCheckButton.setEnabled(true);
    }//GEN-LAST:event_modelComboBoxActionPerformed
   
    private void setComboBox(File file, JComboBox comboBox) {
        try {
            comboBox.removeAllItems();
            FileReader fr = new FileReader(file);
            try (BufferedReader br = new BufferedReader(fr)) {
                String line = br.readLine();

                while(line != null) {//It goes line by line till is null
                        comboBox.addItem(line);
                        line = br.readLine();//read the nect line
                }
                br.close();//Closes the BufferReader
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Ha habido un error!", "Error!", JOptionPane.WARNING_MESSAGE);
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ha habido un error al intentar abrir el archivo!", "Error!", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void setBrandComboBox() {
        File brands = new File(dirPath + separator + "brands.txt");
        setComboBox(brands, brandsComboBox);
        brandsComboBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent arg0) {
                    setModelsComboBox((String) brandsComboBox.getSelectedItem());
                    modelComboBox.setEnabled(true);
                    modelComboBox.requestFocus();
            }
        });
    }
    
    private void setModelsComboBox(String brandSelected) {
        File carModel = null;
        switch(brandSelected) {
            case "Audi" :
                carModel = new File(dirPath + separator + "audi.txt");
                break;
            case "Bmw" :
                carModel = new File(dirPath + separator + "bmw.txt");
                break;
            case "Chevrolet" :
                carModel = new File(dirPath + separator + "chevrolet.txt");
                break;
            case "Citroen" :
                carModel = new File(dirPath + separator + "citroen.txt");
                break;
            case "Dacia" :
                carModel = new File(dirPath + separator + "dacia.txt");
                break;
            case "Fiat" :
                carModel = new File(dirPath + separator + "fiat.txt");
                break;
            case "Ford" :
                carModel = new File(dirPath + separator + "ford.txt");
                break;
            case "Honda" :
                carModel = new File(dirPath + separator + "honda.txt");
                break;
            case "Hyundai" :
                carModel = new File(dirPath + separator + "hyundai.txt");
                break;
            case "Isuzu" :
                carModel = new File(dirPath + separator + "isuzu.txt");
                break;
            case "Iveco" :
                carModel = new File(dirPath + separator + "iveco.txt");
                break;
            case "Jeep" :
                carModel = new File(dirPath + separator + "jeep.txt");
                break;
            case "Kia" :
                carModel = new File(dirPath + separator + "kia.txt");
                break;
            case "Mazda" :
                carModel = new File(dirPath + separator + "mazda.txt");
                break;
            case "Mercedes-Benz" :
                carModel = new File(dirPath + separator + "mercedes-benz.txt");
                break;
            case "Mitsubishi" :
                carModel = new File(dirPath + separator + "mitsubishi.txt");
                break;
            case "Nissan" :
                carModel = new File(dirPath + separator + "nissan.txt");
                break;
            case "Opel" :
                carModel = new File(dirPath + separator + "opel.txt");
                break;
            case "Peugeot" :
                carModel = new File(dirPath + separator + "peugeot.txt");
                break;
            case "Renault" :
                carModel = new File(dirPath + separator + "renault.txt");
                break;
            case "Scania" :
                carModel = new File(dirPath + separator + "scania.txt");
                break;
            case "Seat" :
                carModel = new File(dirPath + separator + "seat.txt");
                break;
            case "Skoda" :
                carModel = new File(dirPath + separator + "skoda.txt");
                break;
            case "Toyota" :
                carModel = new File(dirPath + separator + "toyota.txt");
                break;
            case "Volkswagen" :
                carModel = new File(dirPath + separator + "volkswagen.txt");
                break;
            case "Volvo" :
                carModel = new File(dirPath + separator + "volvo.txt");
                break;
            case "Abarth" :
                carModel = new File(dirPath + separator + "abarth.txt");
                break;
            case "Alfa Romeo" :
                carModel = new File(dirPath + separator + "alfa-romeo.txt");
                break;
            case "Aro" :
                carModel = new File(dirPath + separator + "aro.txt");
                break;
            case "Asia Motors" :
                carModel = new File(dirPath + separator + "asia-motors.txt");
                break;
            case "Aston Martin" :
                carModel = new File(dirPath + separator + "aston-martin.txt");
                break;
            case "Austin" :
                carModel = new File(dirPath + separator + "austin.txt");
                break;
            case "Auverland" :
                carModel = new File(dirPath + separator + "auverland.txt");
                break;
            case "Bentley" :
                carModel = new File(dirPath + separator + "bentley.txt");
                break;
            case "Bertone" :
                carModel = new File(dirPath + separator + "bertone.txt");
                break;
            case "Cadillac" :
                carModel = new File(dirPath + separator + "cadillac.txt");
                break;
            case "Chrysler" :
                carModel = new File(dirPath + separator + "chrysler.txt");
                break;
            case "Corvette" :
                carModel = new File(dirPath + separator + "corvette.txt");
                break;
            case "Daewoo" :
                carModel = new File(dirPath + separator + "daewoo.txt");
                break;
            case "Daihatsu" :
                carModel = new File(dirPath + separator + "daihatsu.txt");
                break;
            case "Dodge" :
                carModel = new File(dirPath + separator + "dodge.txt");
                break;
            case "Ferrari" :
                carModel = new File(dirPath + separator + "ferrari.txt");
                break;
            case "Galloper" :
                carModel = new File(dirPath + separator + "galloper.txt");
                break;
            case "Hummer" :
                carModel = new File(dirPath + separator + "hummer.txt");
                break;
            case "Infiniti" :
                carModel = new File(dirPath + separator + "infiniti.txt");
                break;
            case "Innocenti" :
                carModel = new File(dirPath + separator + "innocenti.txt");
                break;
            case "Jaguar" :
                carModel = new File(dirPath + separator + "jaguar.txt");
                break;
            case "Lada" :
                carModel = new File(dirPath + separator + "lada.txt");
                break;
            case "Lamborghini" :
                carModel = new File(dirPath + separator + "lamborghini.txt");
                break;
            case "Lancia" :
                carModel = new File(dirPath + separator + "lancia.txt");
                break;
            case "Land-Rover" :
                carModel = new File(dirPath + separator + "land-rover.txt");
                break;
            case "Lexus" :
                carModel = new File(dirPath + separator + "lexus.txt");
                break;
            case "Lotus" :
                carModel = new File(dirPath + separator + "lotus.txt");
                break;
            case "Mahindra" :
                carModel = new File(dirPath + separator + "mahindra.txt");
                break;
            case "Maserati" :
                carModel = new File(dirPath + separator + "maserati.txt");
                break;
            case "Mg" :
                carModel = new File(dirPath + separator + "mg.txt");
                break;
            case "Mini" :
                carModel = new File(dirPath + separator + "mini.txt");
                break;
            case "Morgan" :
                carModel = new File(dirPath + separator + "morgan.txt");
                break;
            case "Pontiac" :
                carModel = new File(dirPath + separator + "pontiac.txt");
                break;
            case "Porsche" :
                carModel = new File(dirPath + separator + "porsche.txt");
                break;
            case "Rolls-Royce" :
                carModel = new File(dirPath + separator + "rolls-royce.txt");
                break;
            case "Rover" :
                carModel = new File(dirPath + separator + "rover.txt");
                break;
            case "Saab" :
                carModel = new File(dirPath + separator + "saab.txt");
                break;
            case "Santana" :
                carModel = new File(dirPath + separator + "santana.txt");
                break;
            case "Smart" :
                carModel = new File(dirPath + separator + "smart.txt");
                break;
            case "Ssangyong" :
                carModel = new File(dirPath + separator + "ssangyong.txt");
                break;
            case "Subaru" :
                carModel = new File(dirPath + separator + "subaru.txt");
                break;
            case "Suzuki" :
                carModel = new File(dirPath + separator + "suzuki.txt");
                break;
            case "Talbot" :
                carModel = new File(dirPath + separator + "talbot.txt");
                break;
            case "Tata" :
                carModel = new File(dirPath + separator + "tata.txt");
                break;
        }
        
        setComboBox(carModel, modelComboBox);
    }
    
    public Vehiculo getVehicule() {
        switch (vehiculeTypeBox.getSelectedIndex()) {
            case 0:
                Coche car = new Coche();
                car.askInfo(plate.getText(), (String) brandsComboBox.getSelectedItem(), (String) modelComboBox.getSelectedItem(), 
                        Integer.parseInt(numSeats.getText()), Integer.parseInt(numDays.getText()), getGama());
                return car;
            case 1:
                Carga carga = new Carga(plate.getText(), (String) brandsComboBox.getSelectedItem(), (String) modelComboBox.getSelectedItem(), 
                        Integer.parseInt(numSeats.getText()), Integer.parseInt(numDays.getText()), Double.parseDouble(maxWeight.getText()));
                return carga;
            default:
                Camion truck = new Camion(plate.getText(), (String) brandsComboBox.getSelectedItem(), (String) modelComboBox.getSelectedItem(), 
                        Integer.parseInt(numSeats.getText()), Integer.parseInt(numDays.getText()), Double.parseDouble(maxWeight.getText()), getStructure());
                return truck;
        }
    }
    
    private void infoDisplay() {
        InfoDisplay v = new InfoDisplay(spots);
        v.setResizable(true);
        v.setMaximizable(true);
        v.setIconifiable(true);
        v.setVisible(true);
        v.setClosable(true);
        this.getDesktopPane().add(v);
        v.toFront();
        v.requestFocus();
        v.repaint();
        v.completeVehiculeInfo(getVehicule());
    }
    
    private int seatsCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {
        int seats = 0;
        if(seatsCheckButton.getText().equals("Check")) {
            if(!Pregunta.isNumInt(numSeats.getText())) {
                numSeats.setText("");
                numSeats.requestFocus();
                return -1;
            }
            seats = Integer.parseInt(numSeats.getText());
            if(!VehiculoVerifications.validSeatsAsk(seats)) {
                numSeats.setText("");
                numSeats.requestFocus();
            } else {
                numSeats.setEditable(false);
                seatsCheckButton.setText("Modify");
                numDays.setEnabled(true);
                daysCheckButton.setEnabled(true);
                numDays.requestFocus();
            }
        } else {
            seatsCheckButton.setText("Check");
            numSeats.setEditable(true);
            numSeats.setText("");
            numSeats.requestFocus();
        }
        return seats;
    }                                                

    private int daysCheckButtonActionPerformed(java.awt.event.ActionEvent evt) { 
        int days = 0;
        if(daysCheckButton.getText().equals("Check")) {
            if(!Pregunta.isNumInt(numDays.getText())) {
                numDays.setText("");
                numDays.requestFocus();
                return -1;
            }
            days = Integer.parseInt(numDays.getText());
            if(!VehiculoVerifications.validDaysAsk(days)) {
                numDays.setText("");
                numDays.requestFocus();
                return -1;
            } else {
                numDays.setEditable(false);
                daysCheckButton.setText("Modify");
                vehiculeTypeBox.setEnabled(false);
                if(vehiculeTypeBox.getSelectedIndex() == 0) {
                    gamaComboBox.setEnabled(true);
                    gamaComboBox.requestFocus();
                } else {
                    maxWeight.setEnabled(true);
                    maxWeight.requestFocus();
                    weightCheckButton.setEnabled(true);
                }
            }
        } else {
            daysCheckButton.setText("Check");
            numDays.setEditable(true);
            numDays.setText("");
            numDays.requestFocus();
        }
        return days;
    }                                               
    
    private Gama getGama() {
        switch (gamaComboBox.getSelectedIndex()) {
            case 0:
                return Gama.A;
            case 1:
                return Gama.B;
            case 2:
                return Gama.C;
            default:
                return Gama.D;
        }
    }
    
    private double weightCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {
        double weight = 0;
        if(weightCheckButton.getText().equals("Check")) {
            if(!Pregunta.isNumDouble(maxWeight.getText())) {
                maxWeight.setText("");
                maxWeight.requestFocus();
                return -1;
            }
            weight = Double.parseDouble(maxWeight.getText());
            if(!VehiculoVerifications.validPMAAsk(weight)) {
                maxWeight.setText("");
                maxWeight.requestFocus();
                return -1;
            } else {
                maxWeight.setEditable(false);
                weightCheckButton.setText("Modify");
                if(vehiculeTypeBox.getSelectedIndex() == 1) {
                    createVehiculeButton.setEnabled(true);
                    createVehiculeButton.requestFocus();
                } else if(vehiculeTypeBox.getSelectedIndex() == 2) {
                    structureComboBox.setEnabled(true);
                    structureComboBox.requestFocus();
                }
            }
        } else {
            weightCheckButton.setText("Check");
            maxWeight.setEditable(true);
            maxWeight.setText("");
            maxWeight.requestFocus();
        }
        return weight;
    } 
    
    private Structure getStructure() {
        switch (structureComboBox.getSelectedIndex()) {
            case 0:
                return Structure.REMOLQUE;
            case 1:
                return Structure.SEMIRREMOLQUE;
            default:
                return Structure.RIGIDO;
        }   
    }
    
    private void createVehiculeButtonActionPerformed(java.awt.event.ActionEvent evt) {
        infoDisplay();
        try {
            this.setClosed(true);
        } catch (PropertyVetoException ex) {
            JOptionPane.showMessageDialog(null, "Ha habido un error al intentar cerrar!", "Error!", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    public static String projectPath = System.getProperty("user.dir");//Project's path
    public static String separator = File.separator;//Separator for the diferrent OS
    public static String dirPath = projectPath + separator + "src" + separator + "actividad06" + separator + "graphics" + separator + "files" + separator + "vehicules";//Path where the files will be created
    public static File dir = new File(dirPath);//Inicialize for the File object
    private JLabel[] spots;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> brandsComboBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton createVehiculeButton;
    private javax.swing.JButton daysCheckButton;
    private javax.swing.JComboBox<String> gamaComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField maxWeight;
    private javax.swing.JComboBox<String> modelComboBox;
    private javax.swing.JTextField numDays;
    private javax.swing.JTextField numSeats;
    private javax.swing.JTextField plate;
    private javax.swing.JButton plateCheckButton;
    private javax.swing.JButton seatsCheckButton;
    private javax.swing.JComboBox<String> structureComboBox;
    private javax.swing.JComboBox<String> vehiculeTypeBox;
    private javax.swing.JButton weightCheckButton;
    // End of variables declaration//GEN-END:variables
}


